name: Continuous Integration

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    name: Test on Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install -vvv

      - name: Run tests
        run: pytest ./tests

  release:
    needs: test
    runs-on: ubuntu-latest
    name: Create new release in PyPI
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          cache: 'poetry'

      - name: Publish release to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN }}
        run: poetry publish --build
